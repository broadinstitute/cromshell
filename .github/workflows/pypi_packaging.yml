# Action to create a version bump, git release, and push to PyPi.
# Performed manually through workflow dispatch.

name: Publish to PyPi
on:
  workflow_dispatch:
    inputs:
      bump_version_type:
        description: 'The type of version bump'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      release_notes:
        description: "The content of git release notes"
        required: false
        type: string

jobs:
  # This job will bump the version number, in the files listed in
  # .bumpversion.cfg, and push the changes to the main branch. Thus,
  # when a PR is merged into the main branch, the version number will be bumped.
  patch_version_bump:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - name: Generate Release Notes
      # Uses user proved release notes or retrieves the commit message from the last commit
      # in current branch (main) and writes it to a file called release_notes.txt
      id: release_notes
      run: |
          echo '${{ inputs.release_notes }}' > release_notes.txt
          if [ -s release_notes.txt ]; then
            : # Pass
          else
            git log --format=%B -n 1 ${{ github.event.after }} > release_notes.txt
          fi

    - name: Github Bumpversion Action
      id: version-bump
      uses: jasonamyers/github-bumpversion-action@v1.0.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEFAULT_BUMP: ${{ inputs.bump_version_type }}

    - name: New Version
      run: echo ${{ steps.version-bump.outputs.new_ver }}

    - name: Push Changes To Master/Main
      # Pushes the changes to the main branch, requires workflows to be able to
      # push and approve PRs to the main branch
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tags: true

    # Create Github Release
    - name: Create Github release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version-bump.outputs.new_ver }}
        release_name: '${{ steps.version-bump.outputs.new_ver }}'
        body_path: "release_notes.txt"
        draft: false
        prerelease: false

    # PyPI Packaging
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Setup Env
      run: python3 -m pip install --upgrade pip build

    - name: Validate setup.py
      run: python3 setup.py check --metadata

    - name: Build
      run: python3 -m build

    - name: Upload to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.Test_PYPI_TOKEN }}
        packages-dir: dist/
        repository-url: https://test.pypi.org/
