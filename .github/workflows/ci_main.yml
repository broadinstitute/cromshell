# Continuous integration and delivery of the main branch.
# This workflow will run action below on every push to the main branch.

name: CI/CD
on:
  push:
    branches:
    - main

jobs:
  # Minor Version Bump
  # This job will bump the version number by one minor version, in the
  # files listed in .bumpversion.cfg, and push the changes to the main branch. Thus,
  # when a PR is merged into the main branch, the version number will be bumped.
  patch_version_bump:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - name: Generate Release Notes
      # Retrieves the commit message from the last commit in current branch (main)
      # and writes it to a file called release_notes.txt
      run: git log --format=%B -n 1 ${{ github.event.after }} > release_notes.txt

    - name: Github Bumpversion Action
      id: version-bump
      uses: jasonamyers/github-bumpversion-action@v1.0.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEFAULT_BUMP: "patch"

    - name: New Version
      run: echo ${{ steps.version-bump.outputs.new_ver }}

    - name: Push Changes To Master/Main
      # Pushes the changes to the main branch, requires workflows to be able to
      # push and approve PRs to the main branch
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tags: true

    # Create Github Release
    - name: Create Github release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version-bump.outputs.new_ver }}
        release_name: '${{ steps.version-bump.outputs.new_ver }}'
        body_path: "release_notes.txt"
        draft: false
        prerelease: false

    # PyPI Packaging
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Setup Env
      run: python3 -m pip install --upgrade pip build

    - name: Validate setup.py
      run: python3 setup.py check --metadata

    - name: Build
      run: python3 -m build

    - name: Upload to PyPI
      uses: pypa/gh-action-pypi-publish@v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_TOKEN }}
        packages-dir: dist/
