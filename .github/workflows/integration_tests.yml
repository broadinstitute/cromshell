name: Integration Tests

# Controls when the action will run.
# Triggers the workflow on push or pull request events
on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [ 3.6, 3.7, 3.8 ]

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install Dev Requirments
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt

      - name: Pull and setup mysql dockers
        run: |
          docker run -p 3306:3306 --ip=172.17.0.2 --name NameOfTheContainer -e MYSQL_ROOT_PASSWORD=YourPassword -e MYSQL_DATABASE=DatabaseName -e MYSQL_USER=ChooseAName -e MYSQL_PASSWORD=YourOtherPassword -d mysql/mysql-server:5.5

      - name: Pull and setup cromwell docker
        # The export line below gets the latest git tag number , which will
        # later be used to pull the cromwell docker. This can be a failure point if the
        # latest tag is a bug fix release. Normally a docker image isn't created for the
        # respective git bug fix tag. For example there isn't a 54.1 docker tag for
        # git release tag 54.1. update regex when possible . ${CROMWELL_TAG}
        run: |
          export CROMWELL_TAG=$(curl -s https://api.github.com/repos/broadinstitute/cromwell/releases/latest | grep -o '"tag_name": "[^"]*' | grep -o '[^"]*$')
          ls
          pwd
          docker run -p 8000:8000 -v ${PWD}/tests/resources/cromwell_application.conf:/cromwell_application.conf --name CromwellContainer -e JAVA_OPTS="-Dconfig.file=/cromwell_application.conf" -d broadinstitute/cromwell:${CROMWELL_TAG} server
          sleep 1m
          docker logs CromwellContainer
          docker ps

      - name: Install Tox
        run: pip install tox

      - name: Run Tox integration tests
        # Run tox using the version of Python in `PATH`
        run: tox -e integration
