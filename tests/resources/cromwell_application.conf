include required(classpath("application.conf"))
include "build_application.inc.conf"

backend {
  default = "Local"
  # Do not include LocalBourneShell among the enabled backends as that will run with /bin/sh which not all tests can handle.
  enabled = ["Local", "LocalNoDocker"]
  providers {
    Local {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        include "local_provider_config.inc.conf"

        # Have the engine (maybe) authenticate to docker.io. See BT-141 for more info.
        include "dockerhub_provider_config_v1.inc.conf"
      }
    }
    LocalNoDocker {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        include "local_provider_config.inc.conf"
        runtime-attributes = ""
        submit-docker = null
        kill-docker = null

        # Have the engine (maybe) authenticate to docker.io. See BT-141 for more info.
        include "dockerhub_provider_config_v1.inc.conf"
      }
    }
    LocalBourneShell {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        include "local_provider_config.inc.conf"
        job-shell = /bin/sh

        # Have the engine (maybe) authenticate to docker.io. See BT-141 for more info.
        include "dockerhub_provider_config_v1.inc.conf"
      }
    }
    LocalCacheableRuntimeAttribute {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        include "local_provider_config.inc.conf"
        runtime-attributes = """
          Int cacheworthy_attribute
          Int uncacheworthy_attribute_1
          Int uncacheworthy_attribute_2
        """
        runtime-attributes-for-caching = {
          cacheworthy_attribute: true
          uncacheworthy_attribute_1: false
          # No specific entry for uncacheworthy_attribute_2: it should be 'false' by default
        }
        submit-docker = null
        kill-docker = null

        # Have the engine (maybe) authenticate to docker.io. See BT-141 for more info.
        include "dockerhub_provider_config_v1.inc.conf"
      }
    }
  }
}

# The database setting below are used to allow cromwell docker container
# access the mysql database container during integration testing.
# The parameters are found during the creating of the mysql
# container in .github/workflows/integration_test.yml
database {
  profile = "slick.jdbc.MySQLProfile$"
  db {
    driver = "com.mysql.cj.jdbc.Driver"
    # Replaced "localhost" with "172.17.0.2" to allow cromwell container to
    # communicate with mysql container on docker network
    url = "jdbc:mysql://172.17.0.2/DatabaseName?rewriteBatchedStatements=true&useSSL=false"
    user = "ChooseAName"
    password = "YourOtherPassword"
    connectionTimeout = 5000
  }
}
